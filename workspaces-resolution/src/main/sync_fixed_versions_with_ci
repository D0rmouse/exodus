#!/usr/bin/env python
import sys
sys.dont_write_bytecode = True
from resolving_lib.resolving_utils import read_current_branch, write_symlink_to_path
from resolving_lib.resolving_files_paths import *
from shutil import copyfile
from resolving_lib.resolving_from_server import create_versions_files_from_server

workspace_dir = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))

current_branch = read_current_branch(workspace_dir)
local_cache_versions_file_path = "{workspace_dir}{tools}{versions_folder}/{branch}{postfix}".format(
    workspace_dir=workspace_dir,
    tools=tools_relative_path,
    versions_folder=local_cache_versions_folder,
    branch=current_branch,
    postfix=starlark_file_name_postfix)
git_tracked_versions_file_path = "{workspace_dir}{tools}{versions_folder}/{branch}{postfix}".format(
    workspace_dir=workspace_dir,
    tools=tools_relative_path,
    versions_folder=git_tracked_versions_folder,
    branch=current_branch,
    postfix=starlark_file_name_postfix)
git_tracked_folder_path = "{workspace_dir}{tools}{versions_folder}".format(
    workspace_dir=workspace_dir,
    tools=tools_relative_path,
    versions_folder=git_tracked_versions_folder)

try:
    if not os.path.exists(git_tracked_folder_path):
        logging.debug("Creating git_tracked_folder_path = {}".format(git_tracked_folder_path))
        os.makedirs(git_tracked_folder_path)
    if not does_non_empty_file_exist(local_cache_versions_file_path):
        logging.debug("Creating versions files from server in local cache")
        create_versions_files_from_server(workspace_dir)
        logging.debug("AFTER create_versions_files_from_server")
    logging.debug("copying versions file from local cache to git tracked folder")
    copyfile(local_cache_versions_file_path, git_tracked_versions_file_path)
    logging.debug("writing local cache symlink to git tracked file")
    write_symlink_to_path(local_cache_symlink_path(workspace_dir), git_tracked_versions_file_path)
    logging.debug("writing local cache file as a symlink to git tracked file")
    write_symlink_to_path(local_cache_versions_file_path, git_tracked_versions_file_path)
    logging.debug("Versions files synced!!!")
except Exception as error:
    print_message("Oops... something went wrong: {}. Please contact CI team for support".format(error))
